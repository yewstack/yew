---
name: Size Comparison

on:
  pull_request_target:
    branches: [master]
    paths:
      - .github/workflows/size-cmp.yml
      - "ci/**"
      - "packages/**"
      - "examples/**"
      - "Cargo.toml"

jobs:
  size-cmp:
    name: Compare Size between master and current Pull Request
    runs-on: ubuntu-latest

    steps:
      - name: Checkout master
        uses: actions/checkout@v3
        with:
          repository: 'yewstack/yew'
          ref: master
          path: yew-master

      - name: Checkout pull request
        uses: actions/checkout@v3
        with:
          path: current-pr
          ref: "${{ github.head_ref }}"

      - name: Setup toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          target: wasm32-unknown-unknown
          components: rust-src
          override: true
          profile: minimal

      - name: Restore Rust cache for master
        uses: Swatinem/rust-cache@v1
        with:
          working-directory: yew-master
          key: master

      - name: Restore Rust cache for current pull request
        uses: Swatinem/rust-cache@v1
        with:
          working-directory: current-pr
          key: pr

      - name: Setup Trunk
        uses: jetli/trunk-action@v0.1.0
        with:
          version: 'latest'

      - name: Build master examples
        run: find examples/*/index.html | xargs -I '{}' trunk build --release '{}' || exit 0
        working-directory: yew-master
        env:
          RUSTUP_TOOLCHAIN: nightly

      - name: Build pull request examples
        run: find examples/*/index.html | xargs -I '{}' trunk build --release '{}' || exit 0
        working-directory: current-pr
        env:
          RUSTUP_TOOLCHAIN: nightly

      - name: Collect size information
        run: python3 current-pr/ci/collect_sizes.py
        env:
          ISSUE_NUMBER: ${{ github.event.number }}

      - name: Make pull request comment
        run: python3 ci/make_example_size_cmt.py
        working-directory: yew-master

      - name: Post Comment
        uses: actions/github-script@v6
        with:
          script: |
            const commentInfo = {
              ...context.repo,
              issue_number: ${{ env.PR_NUMBER }},
            };

            const comment = {
              ...commentInfo,
              body: JSON.parse(process.env.YEW_EXAMPLE_SIZES),
            };

            function isCommentByBot(comment) {
              return comment.user.type === "Bot" && comment.body.includes("### Size Comparison");
            }

            let commentId = null;
            const comments = (await github.rest.issues.listComments(commentInfo)).data;
            for (let i = comments.length; i--; ) {
              const c = comments[i];
              if (isCommentByBot(c)) {
                commentId = c.id;
                break;
              }
            }

            if (commentId) {
              try {
                await github.rest.issues.updateComment({
                  ...context.repo,
                  comment_id: commentId,
                  body: comment.body,
                });
              } catch (e) {
                commentId = null;
              }
            }

            if (!commentId) {
              await github.rest.issues.createComment(comment);
            }
