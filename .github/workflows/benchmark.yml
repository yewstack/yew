name: Benchmark

on:
  push:
    paths-ignore:
      - 'website/**'
    branches:
      - master
  pull_request:
    paths-ignore:
      - 'website/**'
    types: [labeled, synchronize, opened, reopened]

permissions:
  # deployments permission to deploy GitHub pages website
  deployments: write
  # contents permission to update benchmark contents in gh-pages branch
  contents: write

jobs:
  benchmark:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          path: "./yew"

      - uses: actions/checkout@v3
        with:
          repository: krausest/js-framework-benchmark
          path: "./js-framework-benchmark"
          ref: 3e0fff7973417acd8b00c2fc3e94a01dfa6f3438

      - name: Setup toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
          targets: wasm32-unknown-unknown

      - uses: jetli/wasm-pack-action@v0.4.0
        with:
          version: "latest"

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - uses: Swatinem/rust-cache@v2
        with:
          working-directory: yew

      - uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-benchmark-${{ hashFiles('js-framework-benchmark/package-lock.json') }}-${{ hashFiles('js-framework-benchmark/webdriver-ts/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-benchmark-
            ${{ runner.os }}

      - name: setup js-framework-benchmark
        shell: bash
        working-directory: js-framework-benchmark
        run: |
          npm ci
          npm run install-server
          npm run install-webdriver-ts

      - name: setup benchmark-struct benchmark
        shell: bash
        run: |
          sed -i "s#../..#`realpath ./yew/`#" yew/tools/benchmark-struct/Cargo.toml
          rm -rf js-framework-benchmark/frameworks/keyed/yew/*
          cp -r yew/tools/benchmark-struct/* js-framework-benchmark/frameworks/keyed/yew/

      - name: build benchmark-struct app
        shell: bash
        working-directory: js-framework-benchmark/frameworks/keyed/yew/
        run: |
          npm ci
          npm run build-prod-without-tools-install

      - name: setup yew-hooks benchmark
        shell: bash
        run: |
          sed -i "s#../..#`realpath ./yew/`#" yew/tools/benchmark-hooks/Cargo.toml
          rm -rf js-framework-benchmark/frameworks/keyed/yew-hooks/*
          cp -r yew/tools/benchmark-hooks/* js-framework-benchmark/frameworks/keyed/yew-hooks/

      - name: build benchmark-hooks app
        shell: bash
        working-directory: js-framework-benchmark/frameworks/keyed/yew-hooks/
        run: |
          npm ci
          npm run build-prod-without-tools-install

      - name: run js-framework-benchmark server
        shell: bash
        working-directory: js-framework-benchmark
        run: npm start &

      - name: js-framework-benchmark/webdriver-ts npm run bench
        shell: bash
        working-directory: js-framework-benchmark/webdriver-ts
        run: npm run tsbench -- --framework keyed/yew keyed/yew-hooks --runner playwright --headless

      - name: transform results to be fit for display benchmark-action/github-action-benchmark@v1
        shell: bash
        run: |
          mkdir artifacts/
          jq -s . js-framework-benchmark/webdriver-ts/results/*.json | cargo run --manifest-path yew/tools/Cargo.toml --release -p process-benchmark-results > artifacts/results.json
          echo "$EVENT_INFO" > artifacts/PR_INFO
        env:
          EVENT_INFO: ${{ toJSON(github.event) }}

      - name: Upload result artifacts
        uses: actions/upload-artifact@v3
        with:
          name: results
          path: artifacts/
          if-no-files-found: error
