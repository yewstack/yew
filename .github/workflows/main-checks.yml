name: Pull Request

on:
  pull_request:
    paths-ignore:
      - 'website/**'
      - 'tools/website-test/**'
      - '**/*.md'
  push:
    branches: [master]
    paths-ignore:
      - 'tools/website-test/**'
      - 'website/**'
      - '**/*.md'

jobs:

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          profile: minimal
          components: clippy

      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target
          key: cargo-${{ runner.os }}-clippy-${{ hashFiles('**/Cargo.toml') }}
          restore-keys: |
            cargo-${{ runner.os }}-clippy
            cargo-${{ runner.os }}-

      - name: Timestamp Cached Target
        run: ./ci/cargo-sweep sweep -s

      - name: Run clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --all-targets --exclude website-test -- -D warnings
      - name: Remove Untouched Cache
        run: ./ci/cargo-sweep sweep -f

  clippy-release:
    name: Clippy on release profile
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          profile: minimal
          components: clippy

      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target
          key: cargo-${{ runner.os }}-clippy-release-${{ hashFiles('**/Cargo.toml') }}
          restore-keys: |
            cargo-${{ runner.os }}-clippy-release
            cargo-${{ runner.os }}-

      - name: Timestamp Cached Target
        run: ./ci/cargo-sweep sweep -s
      - name: Run clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --all-targets --release --exclude website-test -- -D warnings
      - name: Remove Untouched Cache
        run: ./ci/cargo-sweep sweep -f

  doc_tests:
    name: Documentation Tests
    # Using 20.04 because 18.04 (latest) only has aspell 0.60.7, and we need 0.60.8
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: wasm32-unknown-unknown
          override: true
          profile: minimal

      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target
          key: cargo-${{ runner.os }}-doc-tests-${{ hashFiles('**/Cargo.toml') }}
          restore-keys: |
            cargo-${{ runner.os }}-doc-tests
            cargo-${{ runner.os }}-

      - name: Check spelling
        run: |
          sudo apt-get install aspell
          ci/spellcheck.sh list

      - name: Timestamp Cached Target
        run: ./ci/cargo-sweep sweep -s
      - name: Run doctest
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --doc --exclude website-test

      - name: Run doctest - yew with features
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --doc --features doc_test --features wasm_test --exclude website-test

      - name: Remove Untouched Cache
        run: ./ci/cargo-sweep sweep -f

  integration_tests:
    name: Integration Tests on ${{ matrix.toolchain }}
    runs-on: ubuntu-latest

    strategy:
      matrix:
        toolchain:
          # anyway to dynamically grep the MSRV from Cargo.toml?
          - 1.56.0 # MSRV
          - stable

    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.toolchain }}
          target: wasm32-unknown-unknown
          override: true
          profile: minimal

      - name: Install wasm-pack
        run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh

      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target
          key: cargo-${{ runner.os }}-integration-tests-${{ matrix.toolchain }}-${{ hashFiles('**/Cargo.toml') }}
          restore-keys: |
            cargo-${{ runner.os }}-integration-tests-${{ matrix.toolchain }}
            cargo-${{ runner.os }}-integration-tests
            cargo-${{ runner.os }}

      - name: Timestamp Cached Target
        run: ./ci/cargo-sweep sweep -s
      - name: Run tests - yew
        run: |
          cd packages/yew
          wasm-pack test --chrome --firefox --headless -- --features "wasm_test"

      - name: Run tests - yew-router
        run: |
          cd packages/yew-router
          wasm-pack test --chrome --firefox --headless
      - name: Remove Untouched Cache
        run: ./ci/cargo-sweep sweep -f

  unit_tests:
    name: Unit Tests on ${{ matrix.toolchain }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        toolchain:
          # anyway to dynamically grep the MSRV from Cargo.toml?
          - 1.56.0 # MSRV
          - stable
          - nightly

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.toolchain }}
          override: true
          profile: minimal

      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target
          key: cargo-${{ runner.os }}-unit-tests-${{ matrix.toolchain }}-${{ hashFiles('**/Cargo.toml') }}
          restore-keys: |
            cargo-${{ runner.os }}-unit-tests-${{ matrix.toolchain }}
            cargo-${{ runner.os }}-unit-tests
            cargo-${{ runner.os }}

      - name: Timestamp Cached Target
        run: ./ci/cargo-sweep sweep -s

      - name: Run tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --all-targets --workspace --exclude yew --exclude website-test

      - name: Remove Untouched Cache
        run: ./ci/cargo-sweep sweep -f

  test-lints:
    name: Test lints on nightly
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
          profile: minimal

      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target
          key: cargo-${{ runner.os }}-nightly-lints-${{ hashFiles('**/Cargo.toml') }}
          restore-keys: |
            cargo-${{ runner.os }}-nightly-lints
            cargo-${{ runner.os }}

      - name: Timestamp Cached Target
        run: ./ci/cargo-sweep sweep -s
      - name: Run tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: -p yew-macro test_html_lints --features lints
      - name: Remove Untouched Cache
        run: ./ci/cargo-sweep sweep -f
