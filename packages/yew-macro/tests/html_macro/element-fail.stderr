error: this opening tag has no corresponding closing tag
 --> tests/html_macro/element-fail.rs:7:13
  |
7 |     html! { <div> };
  |             ^^^^^

error: this opening tag has no corresponding closing tag
 --> tests/html_macro/element-fail.rs:8:18
  |
8 |     html! { <div><div> };
  |                  ^^^^^

error: this opening tag has no corresponding closing tag
 --> tests/html_macro/element-fail.rs:9:13
  |
9 |     html! { <div><div></div> };
  |             ^^^^^

error: this closing tag has no corresponding opening tag
  --> tests/html_macro/element-fail.rs:12:13
   |
12 |     html! { </div> };
   |             ^^^^^^

error: this closing tag has no corresponding opening tag
  --> tests/html_macro/element-fail.rs:13:18
   |
13 |     html! { <div></span></div> };
   |                  ^^^^^^^

error: only one root html element is allowed (hint: you can wrap multiple html elements in a fragment `<></>`)
  --> tests/html_macro/element-fail.rs:14:20
   |
14 |     html! { <img /></img> };
   |                    ^^^^^^

error: this closing tag has no corresponding opening tag
  --> tests/html_macro/element-fail.rs:17:18
   |
17 |     html! { <div></span> };
   |                  ^^^^^^^

error: expected ident
  --> tests/html_macro/element-fail.rs:18:17
   |
18 |     html! { <tag-a></tag-b> };
   |                 ^

error: only one root html element is allowed (hint: you can wrap multiple html elements in a fragment `<></>`)
  --> tests/html_macro/element-fail.rs:21:24
   |
21 |     html! { <div></div><div></div> };
   |                        ^^^^^^^^^^^

error: expected a valid html element
  --> tests/html_macro/element-fail.rs:23:18
   |
23 |     html! { <div>Invalid</div> };
   |                  ^^^^^^^

error: `attr` can only be specified once but is given here again
  --> tests/html_macro/element-fail.rs:26:27
   |
26 |     html! { <input attr=1 attr=2 /> };
   |                           ^^^^

error: `value` can only be specified once but is given here again
  --> tests/html_macro/element-fail.rs:27:32
   |
27 |     html! { <input value="123" value="456" /> };
   |                                ^^^^^

error: `kind` can only be specified once but is given here again
  --> tests/html_macro/element-fail.rs:28:36
   |
28 |     html! { <input kind="checkbox" kind="submit" /> };
   |                                    ^^^^

error: `checked` can only be specified once but is given here again
  --> tests/html_macro/element-fail.rs:29:33
   |
29 |     html! { <input checked=true checked=false /> };
   |                                 ^^^^^^^

error: `disabled` can only be specified once but is given here again
  --> tests/html_macro/element-fail.rs:30:34
   |
30 |     html! { <input disabled=true disabled=false /> };
   |                                  ^^^^^^^^

error: `selected` can only be specified once but is given here again
  --> tests/html_macro/element-fail.rs:31:35
   |
31 |     html! { <option selected=true selected=false /> };
   |                                   ^^^^^^^^

error: `class` can only be specified once but is given here again
  --> tests/html_macro/element-fail.rs:32:32
   |
32 |     html! { <div class="first" class="second" /> };
   |                                ^^^^^

error: `ref` can only be specified once
  --> tests/html_macro/element-fail.rs:33:20
   |
33 |     html! { <input ref={()} ref={()} /> };
   |                    ^^^

error: `ref` can only be specified once
  --> tests/html_macro/element-fail.rs:63:20
   |
63 |     html! { <input ref={()} ref={()} /> };
   |                    ^^^

error: this dynamic tag is missing an expression block defining its value
  --> tests/html_macro/element-fail.rs:71:14
   |
71 |     html! { <@></@> };
   |              ^

error: this dynamic tag is missing an expression block defining its value
  --> tests/html_macro/element-fail.rs:72:14
   |
72 |     html! { <@/> };
   |              ^

error: dynamic closing tags must not have a body (hint: replace it with just `</@>`)
  --> tests/html_macro/element-fail.rs:75:27
   |
75 |     html! { <@{"test"}></@{"test"}> };
   |                           ^^^^^^^^

error: the property value must be either a literal or enclosed in braces. Consider adding braces around your expression.
  --> tests/html_macro/element-fail.rs:83:24
   |
83 |     html! { <div class=("deprecated", "warning") /> };
   |                        ^^^^^^^^^^^^^^^^^^^^^^^^^

error: the property value must be either a literal or enclosed in braces. Consider adding braces around your expression.
  --> tests/html_macro/element-fail.rs:84:24
   |
84 |     html! { <input ref=() /> };
   |                        ^^

error: the property value must be either a literal or enclosed in braces. Consider adding braces around your expression.
  --> tests/html_macro/element-fail.rs:85:24
   |
85 |     html! { <input ref=() ref=() /> };
   |                        ^^

error: the property value must be either a literal or enclosed in braces. Consider adding braces around your expression.
  --> tests/html_macro/element-fail.rs:86:28
   |
86 |     html! { <input onfocus=Some(5) /> };
   |                            ^^^^^^^

error: the property value must be either a literal or enclosed in braces. Consider adding braces around your expression.
  --> tests/html_macro/element-fail.rs:87:27
   |
87 |     html! { <input string=NotToString /> };
   |                           ^^^^^^^^^^^

error: the property value must be either a literal or enclosed in braces. Consider adding braces around your expression.
  --> tests/html_macro/element-fail.rs:88:22
   |
88 |     html! { <a media=Some(NotToString) /> };
   |                      ^^^^^^^^^^^^^^^^^

error: the property value must be either a literal or enclosed in braces. Consider adding braces around your expression.
  --> tests/html_macro/element-fail.rs:89:21
   |
89 |     html! { <a href=Some(5) /> };
   |                     ^^^^^^^

error: the property value must be either a literal or enclosed in braces. Consider adding braces around your expression.
  --> tests/html_macro/element-fail.rs:90:25
   |
90 |     html! { <input type=() /> };
   |                         ^^

error: the property value must be either a literal or enclosed in braces. Consider adding braces around your expression.
  --> tests/html_macro/element-fail.rs:91:26
   |
91 |     html! { <input value=() /> };
   |                          ^^

error: the property value must be either a literal or enclosed in braces. Consider adding braces around your expression.
  --> tests/html_macro/element-fail.rs:92:27
   |
92 |     html! { <input string=NotToString /> };
   |                           ^^^^^^^^^^^

error[E0412]: cannot find type `iNpUt` in this scope
  --> tests/html_macro/element-fail.rs:68:14
   |
68 |     html! { <iNpUt type="text"></iNpUt> };
   |              ^^^^^ not found in this scope

error[E0412]: cannot find type `iNpUt` in this scope
  --> tests/html_macro/element-fail.rs:68:14
   |
5  | fn compile_fail() {
   |                - help: you might be missing a type parameter: `<iNpUt>`
...
68 |     html! { <iNpUt type="text"></iNpUt> };
   |              ^^^^^ not found in this scope

error[E0277]: the trait bound `{integer}: IntoPropValue<Option<AttrValue>>` is not satisfied
  --> tests/html_macro/element-fail.rs:36:28
   |
36 |     html! { <input checked=1 /> };
   |                            ^ the trait `IntoPropValue<Option<AttrValue>>` is not implemented for `{integer}`
   |
   = help: the following implementations were found:
             <&'static str as IntoPropValue<AttrValue>>
             <&'static str as IntoPropValue<Classes>>
             <&'static str as IntoPropValue<Option<AttrValue>>>
             <&'static str as IntoPropValue<Option<String>>>
           and 18 others

error[E0277]: the trait bound `Option<bool>: IntoPropValue<Option<AttrValue>>` is not satisfied
  --> tests/html_macro/element-fail.rs:37:29
   |
37 |     html! { <input checked={Some(false)} /> };
   |                             ^^^^^^^^^^^ the trait `IntoPropValue<Option<AttrValue>>` is not implemented for `Option<bool>`
   |
   = help: the following implementations were found:
             <Option<&'static str> as IntoPropValue<Option<AttrValue>>>
             <Option<&'static str> as IntoPropValue<Option<String>>>
             <Option<String> as IntoPropValue<Option<AttrValue>>>
             <Option<std::rc::Rc<str>> as IntoPropValue<Option<AttrValue>>>

error[E0277]: the trait bound `{integer}: IntoPropValue<Option<AttrValue>>` is not satisfied
  --> tests/html_macro/element-fail.rs:38:29
   |
38 |     html! { <input disabled=1 /> };
   |                             ^ the trait `IntoPropValue<Option<AttrValue>>` is not implemented for `{integer}`
   |
   = help: the following implementations were found:
             <&'static str as IntoPropValue<AttrValue>>
             <&'static str as IntoPropValue<Classes>>
             <&'static str as IntoPropValue<Option<AttrValue>>>
             <&'static str as IntoPropValue<Option<String>>>
           and 18 others

error[E0277]: the trait bound `Option<bool>: IntoPropValue<Option<AttrValue>>` is not satisfied
  --> tests/html_macro/element-fail.rs:39:30
   |
39 |     html! { <input disabled={Some(true)} /> };
   |                              ^^^^^^^^^^ the trait `IntoPropValue<Option<AttrValue>>` is not implemented for `Option<bool>`
   |
   = help: the following implementations were found:
             <Option<&'static str> as IntoPropValue<Option<AttrValue>>>
             <Option<&'static str> as IntoPropValue<Option<String>>>
             <Option<String> as IntoPropValue<Option<AttrValue>>>
             <Option<std::rc::Rc<str>> as IntoPropValue<Option<AttrValue>>>

error[E0277]: the trait bound `{integer}: IntoPropValue<Option<AttrValue>>` is not satisfied
  --> tests/html_macro/element-fail.rs:40:30
   |
40 |     html! { <option selected=1 /> };
   |                              ^ the trait `IntoPropValue<Option<AttrValue>>` is not implemented for `{integer}`
   |
   = help: the following implementations were found:
             <&'static str as IntoPropValue<AttrValue>>
             <&'static str as IntoPropValue<Classes>>
             <&'static str as IntoPropValue<Option<AttrValue>>>
             <&'static str as IntoPropValue<Option<String>>>
           and 18 others

error[E0277]: the trait bound `(): IntoPropValue<Option<AttrValue>>` is not satisfied
  --> tests/html_macro/element-fail.rs:43:26
   |
43 |     html! { <input type={()} /> };
   |                          ^^ the trait `IntoPropValue<Option<AttrValue>>` is not implemented for `()`

error[E0277]: the trait bound `(): IntoPropValue<Option<AttrValue>>` is not satisfied
  --> tests/html_macro/element-fail.rs:44:27
   |
44 |     html! { <input value={()} /> };
   |                           ^^ the trait `IntoPropValue<Option<AttrValue>>` is not implemented for `()`

error[E0277]: the trait bound `(): IntoPropValue<Option<AttrValue>>` is not satisfied
  --> tests/html_macro/element-fail.rs:45:22
   |
45 |     html! { <a href={()} /> };
   |                      ^^ the trait `IntoPropValue<Option<AttrValue>>` is not implemented for `()`

error[E0609]: no field `string` on type `InputProps`
  --> tests/html_macro/element-fail.rs:46:20
   |
46 |     html! { <input string={NotToString} /> };
   |                    ^^^^^^ unknown field
   |
   = note: available fields are: `node_ref`, `key`, `children`, `accept`, `alt` ... and 194 others

error[E0599]: no method named `string` found for struct `InputPropsBuilder` in the current scope
  --> tests/html_macro/element-fail.rs:46:20
   |
46 |     html! { <input string={NotToString} /> };
   |                    ^^^^^^ method not found in `InputPropsBuilder<InputPropsBuilderStepPropsBuilder>`

error[E0277]: the trait bound `Option<NotToString>: IntoPropValue<Option<AttrValue>>` is not satisfied
  --> tests/html_macro/element-fail.rs:47:23
   |
47 |     html! { <a media={Some(NotToString)} /> };
   |                       ^^^^^^^^^^^^^^^^^ the trait `IntoPropValue<Option<AttrValue>>` is not implemented for `Option<NotToString>`
   |
   = help: the following implementations were found:
             <Option<&'static str> as IntoPropValue<Option<AttrValue>>>
             <Option<&'static str> as IntoPropValue<Option<String>>>
             <Option<String> as IntoPropValue<Option<AttrValue>>>
             <Option<std::rc::Rc<str>> as IntoPropValue<Option<AttrValue>>>

error[E0277]: the trait bound `Option<{integer}>: IntoPropValue<Option<AttrValue>>` is not satisfied
  --> tests/html_macro/element-fail.rs:48:22
   |
48 |     html! { <a href={Some(5)} /> };
   |                      ^^^^^^^ the trait `IntoPropValue<Option<AttrValue>>` is not implemented for `Option<{integer}>`
   |
   = help: the following implementations were found:
             <Option<&'static str> as IntoPropValue<Option<AttrValue>>>
             <Option<&'static str> as IntoPropValue<Option<String>>>
             <Option<String> as IntoPropValue<Option<AttrValue>>>
             <Option<std::rc::Rc<str>> as IntoPropValue<Option<AttrValue>>>

error[E0277]: expected a `Fn<(MouseEvent,)>` closure, found `{integer}`
  --> tests/html_macro/element-fail.rs:51:28
   |
51 |     html! { <input onclick=1 /> };
   |                            ^ expected an `Fn<(MouseEvent,)>` closure, found `{integer}`
   |
   = help: the trait `Fn<(MouseEvent,)>` is not implemented for `{integer}`
   = note: required because of the requirements on the impl of `IntoPropValue<Option<yew::Callback<MouseEvent>>>` for `{integer}`

error[E0277]: expected a `Fn<(MouseEvent,)>` closure, found `yew::Callback<String>`
  --> tests/html_macro/element-fail.rs:52:29
   |
52 |     html! { <input onclick={Callback::from(|a: String| ())} /> };
   |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected an `Fn<(MouseEvent,)>` closure, found `yew::Callback<String>`
   |
   = help: the trait `Fn<(MouseEvent,)>` is not implemented for `yew::Callback<String>`
   = note: required because of the requirements on the impl of `IntoPropValue<Option<yew::Callback<MouseEvent>>>` for `yew::Callback<String>`

error[E0277]: expected a `Fn<(FocusEvent,)>` closure, found `Option<{integer}>`
  --> tests/html_macro/element-fail.rs:53:29
   |
53 |     html! { <input onfocus={Some(5)} /> };
   |                             ^^^^^^^ expected an `Fn<(FocusEvent,)>` closure, found `Option<{integer}>`
   |
   = help: the trait `Fn<(FocusEvent,)>` is not implemented for `Option<{integer}>`
   = note: required because of the requirements on the impl of `IntoPropValue<Option<yew::Callback<FocusEvent>>>` for `Option<{integer}>`

error[E0308]: mismatched types
  --> tests/html_macro/element-fail.rs:56:25
   |
56 |     html! { <input ref={()} /> };
   |                         ^^ expected struct `yew::NodeRef`, found `()`

error[E0308]: mismatched types
  --> tests/html_macro/element-fail.rs:57:25
   |
57 |     html! { <input ref={Some(NodeRef::default())} /> };
   |                         ^^^^^^^^^^^^^^^^^^^^^^^^ expected struct `yew::NodeRef`, found enum `Option`
   |
   = note: expected struct `yew::NodeRef`
                found enum `Option<yew::NodeRef>`

error[E0277]: expected a `Fn<(MouseEvent,)>` closure, found `yew::Callback<String>`
  --> tests/html_macro/element-fail.rs:58:29
   |
58 |     html! { <input onclick={Callback::from(|a: String| ())} /> };
   |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected an `Fn<(MouseEvent,)>` closure, found `yew::Callback<String>`
   |
   = help: the trait `Fn<(MouseEvent,)>` is not implemented for `yew::Callback<String>`
   = note: required because of the requirements on the impl of `IntoPropValue<Option<yew::Callback<MouseEvent>>>` for `yew::Callback<String>`

error[E0609]: no field `string` on type `InputProps`
  --> tests/html_macro/element-fail.rs:60:20
   |
60 |     html! { <input string={NotToString} /> };
   |                    ^^^^^^ unknown field
   |
   = note: available fields are: `node_ref`, `key`, `children`, `accept`, `alt` ... and 194 others

error[E0599]: no method named `string` found for struct `InputPropsBuilder` in the current scope
  --> tests/html_macro/element-fail.rs:60:20
   |
60 |     html! { <input string={NotToString} /> };
   |                    ^^^^^^ method not found in `InputPropsBuilder<InputPropsBuilderStepPropsBuilder>`

error[E0308]: mismatched types
  --> tests/html_macro/element-fail.rs:62:25
   |
62 |     html! { <input ref={()} /> };
   |                         ^^ expected struct `yew::NodeRef`, found `()`

error[E0277]: the trait bound `Cow<'static, str>: From<{integer}>` is not satisfied
   --> tests/html_macro/element-fail.rs:77:15
    |
77  |     html! { <@{55}></@> };
    |               ^^^^ the trait `From<{integer}>` is not implemented for `Cow<'static, str>`
    |
    = help: the following implementations were found:
              <Cow<'a, CStr> as From<&'a CStr>>
              <Cow<'a, CStr> as From<&'a CString>>
              <Cow<'a, CStr> as From<CString>>
              <Cow<'a, OsStr> as From<&'a OsStr>>
            and 14 others
    = note: required because of the requirements on the impl of `Into<Cow<'static, str>>` for `{integer}`
note: required by `into`

error[E0277]: the trait bound `(&str, &str): IntoPropValue<Option<AttrValue>>` is not satisfied
  --> tests/html_macro/element-fail.rs:80:25
   |
80 |     html! { <div class={("deprecated", "warning")} /> };
   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `IntoPropValue<Option<AttrValue>>` is not implemented for `(&str, &str)`
