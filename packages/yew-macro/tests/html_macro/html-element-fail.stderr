error: this opening tag has no corresponding closing tag
 --> $DIR/html-element-fail.rs:7:13
  |
7 |     html! { <div> };
  |             ^^^^^

error: this opening tag has no corresponding closing tag
 --> $DIR/html-element-fail.rs:8:18
  |
8 |     html! { <div><div> };
  |                  ^^^^^

error: this opening tag has no corresponding closing tag
 --> $DIR/html-element-fail.rs:9:13
  |
9 |     html! { <div><div></div> };
  |             ^^^^^

error: this closing tag has no corresponding opening tag
  --> $DIR/html-element-fail.rs:12:13
   |
12 |     html! { </div> };
   |             ^^^^^^

error: this closing tag has no corresponding opening tag
  --> $DIR/html-element-fail.rs:13:18
   |
13 |     html! { <div></span></div> };
   |                  ^^^^^^^

error: only one root html element is allowed (hint: you can wrap multiple html elements in a fragment `<></>`)
  --> $DIR/html-element-fail.rs:14:20
   |
14 |     html! { <img /></img> };
   |                    ^^^^^^

error: this closing tag has no corresponding opening tag
  --> $DIR/html-element-fail.rs:17:18
   |
17 |     html! { <div></span> };
   |                  ^^^^^^^

error: this closing tag has no corresponding opening tag
  --> $DIR/html-element-fail.rs:18:20
   |
18 |     html! { <tag-a></tag-b> };
   |                    ^^^^^^^^

error: only one root html element is allowed (hint: you can wrap multiple html elements in a fragment `<></>`)
  --> $DIR/html-element-fail.rs:21:24
   |
21 |     html! { <div></div><div></div> };
   |                        ^^^^^^^^^^^

error: expected a valid html element
  --> $DIR/html-element-fail.rs:23:18
   |
23 |     html! { <div>Invalid</div> };
   |                  ^^^^^^^

error: `attr` can only be specified once but is given here again
  --> $DIR/html-element-fail.rs:26:27
   |
26 |     html! { <input attr=1 attr=2 /> };
   |                           ^^^^

error: `value` can only be specified once but is given here again
  --> $DIR/html-element-fail.rs:27:32
   |
27 |     html! { <input value="123" value="456" /> };
   |                                ^^^^^

error: `kind` can only be specified once but is given here again
  --> $DIR/html-element-fail.rs:28:36
   |
28 |     html! { <input kind="checkbox" kind="submit" /> };
   |                                    ^^^^

error: `checked` can only be specified once but is given here again
  --> $DIR/html-element-fail.rs:29:33
   |
29 |     html! { <input checked=true checked=false /> };
   |                                 ^^^^^^^

error: `disabled` can only be specified once but is given here again
  --> $DIR/html-element-fail.rs:30:34
   |
30 |     html! { <input disabled=true disabled=false /> };
   |                                  ^^^^^^^^

error: `selected` can only be specified once but is given here again
  --> $DIR/html-element-fail.rs:31:35
   |
31 |     html! { <option selected=true selected=false /> };
   |                                   ^^^^^^^^

error: `class` can only be specified once but is given here again
  --> $DIR/html-element-fail.rs:32:32
   |
32 |     html! { <div class="first" class="second" /> };
   |                                ^^^^^

error: `ref` can only be specified once
  --> $DIR/html-element-fail.rs:33:20
   |
33 |     html! { <input ref=() ref=() /> };
   |                    ^^^

error: the tag `<input>` is a void element and cannot have children (hint: rewrite this as `<input/>`)
  --> $DIR/html-element-fail.rs:60:13
   |
60 |     html! { <input type="text"></input> };
   |             ^^^^^^^^^^^^^^^^^^^

error: the tag `<iNpUt>` is a void element and cannot have children (hint: rewrite this as `<iNpUt/>`)
  --> $DIR/html-element-fail.rs:62:13
   |
62 |     html! { <iNpUt type="text"></iNpUt> };
   |             ^^^^^^^^^^^^^^^^^^^

error: this dynamic tag is missing an expression block defining its value
  --> $DIR/html-element-fail.rs:65:14
   |
65 |     html! { <@></@> };
   |              ^

error: this dynamic tag is missing an expression block defining its value
  --> $DIR/html-element-fail.rs:66:14
   |
66 |     html! { <@/> };
   |              ^

error: dynamic closing tags must not have a body (hint: replace it with just `</@>`)
  --> $DIR/html-element-fail.rs:69:27
   |
69 |     html! { <@{"test"}></@{"test"}> };
   |                           ^^^^^^^^

warning: use of deprecated item 'compile_fail::deprecated_use_of_class': the use of `(...)` with the attribute `class` is deprecated and will be removed in version 0.19. Use the `classes!` macro instead.
  --> $DIR/html-element-fail.rs:74:24
   |
74 |     html! { <div class=("deprecated", "warning") /> };
   |                        ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(deprecated)]` on by default

error[E0308]: mismatched types
  --> $DIR/html-element-fail.rs:36:28
   |
36 |     html! { <input checked=1 /> };
   |                            ^ expected `bool`, found integer

error[E0308]: mismatched types
  --> $DIR/html-element-fail.rs:37:28
   |
37 |     html! { <input checked=Some(false) /> };
   |                            ^^^^^^^^^^^ expected `bool`, found enum `std::option::Option`
   |
   = note: expected type `bool`
              found enum `std::option::Option<bool>`

error[E0308]: mismatched types
  --> $DIR/html-element-fail.rs:38:29
   |
38 |     html! { <input disabled=1 /> };
   |                             ^ expected `bool`, found integer

error[E0308]: mismatched types
  --> $DIR/html-element-fail.rs:39:29
   |
39 |     html! { <input disabled=Some(true) /> };
   |                             ^^^^^^^^^^ expected `bool`, found enum `std::option::Option`
   |
   = note: expected type `bool`
              found enum `std::option::Option<bool>`

error[E0308]: mismatched types
  --> $DIR/html-element-fail.rs:40:30
   |
40 |     html! { <option selected=1 /> };
   |                              ^ expected `bool`, found integer

error[E0277]: the trait bound `(): yew::html::conversion::IntoPropValue<std::option::Option<std::borrow::Cow<'static, str>>>` is not satisfied
  --> $DIR/html-element-fail.rs:43:25
   |
43 |     html! { <input type=() /> };
   |                         ^^ the trait `yew::html::conversion::IntoPropValue<std::option::Option<std::borrow::Cow<'static, str>>>` is not implemented for `()`
   |
   = note: required because of the requirements on the impl of `yew::html::conversion::IntoOptPropValue<std::borrow::Cow<'static, str>>` for `()`

error[E0277]: the trait bound `(): yew::html::conversion::IntoPropValue<std::option::Option<std::borrow::Cow<'static, str>>>` is not satisfied
  --> $DIR/html-element-fail.rs:44:26
   |
44 |     html! { <input value=() /> };
   |                          ^^ the trait `yew::html::conversion::IntoPropValue<std::option::Option<std::borrow::Cow<'static, str>>>` is not implemented for `()`
   |
   = note: required because of the requirements on the impl of `yew::html::conversion::IntoOptPropValue<std::borrow::Cow<'static, str>>` for `()`

error[E0277]: the trait bound `(): yew::html::conversion::IntoPropValue<std::option::Option<std::borrow::Cow<'static, str>>>` is not satisfied
  --> $DIR/html-element-fail.rs:45:21
   |
45 |     html! { <a href=() /> };
   |                     ^^ the trait `yew::html::conversion::IntoPropValue<std::option::Option<std::borrow::Cow<'static, str>>>` is not implemented for `()`
   |
  ::: $WORKSPACE/packages/yew/src/virtual_dom/mod.rs
   |
   |     pub fn new(key: &'static str, value: impl IntoOptPropValue<AttrValue>) -> Self {
   |                                               --------------------------- required by this bound in `yew::virtual_dom::PositionalAttr::new`
   |
   = note: required because of the requirements on the impl of `yew::html::conversion::IntoOptPropValue<std::borrow::Cow<'static, str>>` for `()`

error[E0277]: the trait bound `NotToString: yew::html::conversion::IntoPropValue<std::option::Option<std::borrow::Cow<'static, str>>>` is not satisfied
  --> $DIR/html-element-fail.rs:46:27
   |
46 |     html! { <input string=NotToString /> };
   |                           ^^^^^^^^^^^ the trait `yew::html::conversion::IntoPropValue<std::option::Option<std::borrow::Cow<'static, str>>>` is not implemented for `NotToString`
   |
  ::: $WORKSPACE/packages/yew/src/virtual_dom/mod.rs
   |
   |     pub fn new(key: &'static str, value: impl IntoOptPropValue<AttrValue>) -> Self {
   |                                               --------------------------- required by this bound in `yew::virtual_dom::PositionalAttr::new`
   |
   = note: required because of the requirements on the impl of `yew::html::conversion::IntoOptPropValue<std::borrow::Cow<'static, str>>` for `NotToString`

error[E0277]: the trait bound `std::option::Option<NotToString>: yew::html::conversion::IntoPropValue<std::option::Option<std::borrow::Cow<'static, str>>>` is not satisfied
  --> $DIR/html-element-fail.rs:47:22
   |
47 |     html! { <a media=Some(NotToString) /> };
   |                      ^^^^^^^^^^^^^^^^^ the trait `yew::html::conversion::IntoPropValue<std::option::Option<std::borrow::Cow<'static, str>>>` is not implemented for `std::option::Option<NotToString>`
   |
  ::: $WORKSPACE/packages/yew/src/virtual_dom/mod.rs
   |
   |     pub fn new(key: &'static str, value: impl IntoOptPropValue<AttrValue>) -> Self {
   |                                               --------------------------- required by this bound in `yew::virtual_dom::PositionalAttr::new`
   |
   = note: required because of the requirements on the impl of `yew::html::conversion::IntoOptPropValue<std::borrow::Cow<'static, str>>` for `std::option::Option<NotToString>`

error[E0277]: the trait bound `std::option::Option<{integer}>: yew::html::conversion::IntoPropValue<std::option::Option<std::borrow::Cow<'static, str>>>` is not satisfied
  --> $DIR/html-element-fail.rs:48:21
   |
48 |     html! { <a href=Some(5) /> };
   |                     ^^^^^^^ the trait `yew::html::conversion::IntoPropValue<std::option::Option<std::borrow::Cow<'static, str>>>` is not implemented for `std::option::Option<{integer}>`
   |
  ::: $WORKSPACE/packages/yew/src/virtual_dom/mod.rs
   |
   |     pub fn new(key: &'static str, value: impl IntoOptPropValue<AttrValue>) -> Self {
   |                                               --------------------------- required by this bound in `yew::virtual_dom::PositionalAttr::new`
   |
   = note: required because of the requirements on the impl of `yew::html::conversion::IntoOptPropValue<std::borrow::Cow<'static, str>>` for `std::option::Option<{integer}>`

error[E0277]: the trait bound `{integer}: yew::html::conversion::IntoPropValue<std::option::Option<yew::callback::Callback<web_sys::features::gen_MouseEvent::MouseEvent>>>` is not satisfied
  --> $DIR/html-element-fail.rs:51:28
   |
51 |     html! { <input onclick=1 /> };
   |                            ^ the trait `yew::html::conversion::IntoPropValue<std::option::Option<yew::callback::Callback<web_sys::features::gen_MouseEvent::MouseEvent>>>` is not implemented for `{integer}`
   |
  ::: $WORKSPACE/packages/yew/src/html/listener/macros.rs
   |
   |                 pub fn __macro_new(callback: impl IntoOptPropValue<Callback<Event>>) -> Option<Rc<dyn Listener>> {
   |                                                   --------------------------------- required by this bound in `yew::html::listener::listener_web_sys::onclick::Wrapper::__macro_new`
   |
   = help: the following implementations were found:
             <&'static str as yew::html::conversion::IntoPropValue<std::borrow::Cow<'static, str>>>
             <&'static str as yew::html::conversion::IntoPropValue<std::string::String>>
             <&T as yew::html::conversion::IntoPropValue<T>>
             <&T as yew::html::conversion::IntoPropValue<std::option::Option<T>>>
           and 4 others
   = note: required because of the requirements on the impl of `yew::html::conversion::IntoOptPropValue<yew::callback::Callback<web_sys::features::gen_MouseEvent::MouseEvent>>` for `{integer}`

error[E0277]: the trait bound `yew::callback::Callback<std::string::String>: yew::html::conversion::IntoPropValue<std::option::Option<yew::callback::Callback<web_sys::features::gen_MouseEvent::MouseEvent>>>` is not satisfied
  --> $DIR/html-element-fail.rs:52:28
   |
52 |     html! { <input onclick=Callback::from(|a: String| ()) /> };
   |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `yew::html::conversion::IntoPropValue<std::option::Option<yew::callback::Callback<web_sys::features::gen_MouseEvent::MouseEvent>>>` is not implemented for `yew::callback::Callback<std::string::String>`
   |
  ::: $WORKSPACE/packages/yew/src/html/listener/macros.rs
   |
   |                 pub fn __macro_new(callback: impl IntoOptPropValue<Callback<Event>>) -> Option<Rc<dyn Listener>> {
   |                                                   --------------------------------- required by this bound in `yew::html::listener::listener_web_sys::onclick::Wrapper::__macro_new`
   |
   = note: required because of the requirements on the impl of `yew::html::conversion::IntoOptPropValue<yew::callback::Callback<web_sys::features::gen_MouseEvent::MouseEvent>>` for `yew::callback::Callback<std::string::String>`

error[E0277]: the trait bound `std::option::Option<{integer}>: yew::html::conversion::IntoPropValue<std::option::Option<yew::callback::Callback<web_sys::features::gen_FocusEvent::FocusEvent>>>` is not satisfied
  --> $DIR/html-element-fail.rs:53:28
   |
53 |     html! { <input onfocus=Some(5) /> };
   |                            ^^^^^^^ the trait `yew::html::conversion::IntoPropValue<std::option::Option<yew::callback::Callback<web_sys::features::gen_FocusEvent::FocusEvent>>>` is not implemented for `std::option::Option<{integer}>`
   |
  ::: $WORKSPACE/packages/yew/src/html/listener/macros.rs
   |
   |                 pub fn __macro_new(callback: impl IntoOptPropValue<Callback<Event>>) -> Option<Rc<dyn Listener>> {
   |                                                   --------------------------------- required by this bound in `yew::html::listener::listener_web_sys::onfocus::Wrapper::__macro_new`
   |
   = note: required because of the requirements on the impl of `yew::html::conversion::IntoOptPropValue<yew::callback::Callback<web_sys::features::gen_FocusEvent::FocusEvent>>` for `std::option::Option<{integer}>`

error[E0308]: mismatched types
  --> $DIR/html-element-fail.rs:56:24
   |
56 |     html! { <input ref=() /> };
   |                        ^^ expected struct `yew::html::NodeRef`, found `()`

error[E0308]: mismatched types
  --> $DIR/html-element-fail.rs:57:24
   |
57 |     html! { <input ref=Some(NodeRef::default()) /> };
   |                        ^^^^^^^^^^^^^^^^^^^^^^^^ expected struct `yew::html::NodeRef`, found enum `std::option::Option`
   |
   = note: expected struct `yew::html::NodeRef`
                found enum `std::option::Option<yew::html::NodeRef>`

error[E0277]: the trait bound `std::borrow::Cow<'static, str>: std::convert::From<{integer}>` is not satisfied
  --> $DIR/html-element-fail.rs:71:15
   |
71 |     html! { <@{55}></@> };
   |               ^^^^ the trait `std::convert::From<{integer}>` is not implemented for `std::borrow::Cow<'static, str>`
   |
   = help: the following implementations were found:
             <std::borrow::Cow<'a, [T]> as std::convert::From<&'a [T]>>
             <std::borrow::Cow<'a, [T]> as std::convert::From<&'a std::vec::Vec<T>>>
             <std::borrow::Cow<'a, [T]> as std::convert::From<std::vec::Vec<T>>>
             <std::borrow::Cow<'a, std::ffi::CStr> as std::convert::From<&'a std::ffi::CStr>>
           and 11 others
   = note: required because of the requirements on the impl of `std::convert::Into<std::borrow::Cow<'static, str>>` for `{integer}`
   = note: required by `std::convert::Into::into`
